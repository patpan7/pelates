/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pelates;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.By;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;

/**
 *
 * @author patpa
 */
public class mainForm extends javax.swing.JFrame {

    Connection con;
    Statement stmt;
    ResultSet rs;
    String connectionUrl;
    ArrayList<customer> customers = new ArrayList<>();
    String port = null;
    String host = null;
    String kwd;
    String eponimia;
    String afm;
    String email;
    String kinito;
    String brave = System.getProperty("user.home") + "\\AppData\\Local\\BraveSoftware\\Brave-Browser\\Application\\brave.exe";

    /**
     * Creates new form mainForm
     */
    public mainForm() {
        initComponents();
        rbChrome.setSelected(true);
        setTitle("Πελάτες");
        setIconImage(new ImageIcon("C:\\Users\\User\\Desktop\\Pelates\\Pelates\\src\\pelates\\Conference-5.png").getImage());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbSearch = new javax.swing.JTable();
        tfSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tfServer = new javax.swing.JTextField();
        btnSync = new javax.swing.JButton();
        btnLoad = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnTaxisnet = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnSimplyPos = new javax.swing.JButton();
        btnAfm2 = new javax.swing.JButton();
        btnMyposRefister = new javax.swing.JButton();
        btnMypos = new javax.swing.JButton();
        tfMyposPass = new javax.swing.JTextField();
        btnEXous = new javax.swing.JButton();
        btnSimplyCash = new javax.swing.JButton();
        tfAfmPass = new javax.swing.JTextField();
        tfTaxisPass = new javax.swing.JTextField();
        tfSimplyPass = new javax.swing.JTextField();
        tfMyposUser = new javax.swing.JTextField();
        tfAfmUser = new javax.swing.JTextField();
        tfSimplyUser = new javax.swing.JTextField();
        btnAfm1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnMydata = new javax.swing.JButton();
        tfTaxisUser = new javax.swing.JTextField();
        btnTameiakes = new javax.swing.JButton();
        btnEsend = new javax.swing.JButton();
        btnD11 = new javax.swing.JButton();
        btnSimplyRegister = new javax.swing.JButton();
        btnSimplyCashRegister = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        tfOrderUser = new javax.swing.JTextField();
        tfOrderPass = new javax.swing.JTextField();
        btn9Pos = new javax.swing.JButton();
        btn9PosRegister = new javax.swing.JButton();
        btnSimplyRest = new javax.swing.JButton();
        btnSimplyRestRegister = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        rbChrome = new javax.swing.JRadioButton();
        rbBrave = new javax.swing.JRadioButton();
        rbFirefox = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(1225, 861));

        tbSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Κωδικός", "Πελάτης", "ΑΦΜ", "Επάγγελμα", "Τηλ 1", "Τηλ 2", "Κινητό", "Διεύθυνση ", "Πόλη", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbSearch.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        tbSearch.setRowHeight(17);
        tbSearch.setShowGrid(true);
        tbSearch.getTableHeader().setReorderingAllowed(false);
        tbSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSearchMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbSearch);
        if (tbSearch.getColumnModel().getColumnCount() > 0) {
            tbSearch.getColumnModel().getColumn(0).setResizable(false);
            tbSearch.getColumnModel().getColumn(0).setPreferredWidth(30);
            tbSearch.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbSearch.getColumnModel().getColumn(2).setResizable(false);
            tbSearch.getColumnModel().getColumn(2).setPreferredWidth(50);
            tbSearch.getColumnModel().getColumn(3).setResizable(false);
            tbSearch.getColumnModel().getColumn(4).setResizable(false);
            tbSearch.getColumnModel().getColumn(4).setPreferredWidth(50);
            tbSearch.getColumnModel().getColumn(5).setResizable(false);
            tbSearch.getColumnModel().getColumn(5).setPreferredWidth(50);
            tbSearch.getColumnModel().getColumn(6).setResizable(false);
            tbSearch.getColumnModel().getColumn(6).setPreferredWidth(50);
            tbSearch.getColumnModel().getColumn(7).setResizable(false);
            tbSearch.getColumnModel().getColumn(8).setResizable(false);
            tbSearch.getColumnModel().getColumn(8).setPreferredWidth(50);
            tbSearch.getColumnModel().getColumn(9).setResizable(false);
        }

        tfSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfSearchKeyPressed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnSearch.setText("Αναζήτηση");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Sql Server:");

        tfServer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfServer.setText("192.168.1.245\\SQL2017");

        btnSync.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnSync.setText("Sync");
        btnSync.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSyncActionPerformed(evt);
            }
        });

        btnLoad.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnLoad.setText("Load");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(979, 250));

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSave.setText("Αποθήκευση");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("TaxisNet");
        jLabel1.setToolTipText("");

        btnTaxisnet.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTaxisnet.setText("TaxisNet");
        btnTaxisnet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaxisnetActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Simply");
        jLabel5.setToolTipText("");

        btnSimplyPos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSimplyPos.setText("Simply POS");
        btnSimplyPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimplyPosActionPerformed(evt);
            }
        });

        btnAfm2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAfm2.setText("Ανεύρεση ΑΦΜ 2");
        btnAfm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfm2ActionPerformed(evt);
            }
        });

        btnMyposRefister.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMyposRefister.setText("Εγγραφή myPOS");
        btnMyposRefister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMyposRefisterMouseClicked(evt);
            }
        });
        btnMyposRefister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyposRefisterActionPerformed(evt);
            }
        });

        btnMypos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMypos.setText("myPOS");
        btnMypos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyposActionPerformed(evt);
            }
        });

        tfMyposPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfMyposPass.setMaximumSize(new java.awt.Dimension(7, 21));
        tfMyposPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfMyposPassMouseClicked(evt);
            }
        });

        btnEXous.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        btnEXous.setText("Εξουσιοδότηση ΑΑΔΕ");
        btnEXous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEXousActionPerformed(evt);
            }
        });

        btnSimplyCash.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSimplyCash.setText("Simply Cash");
        btnSimplyCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimplyCashActionPerformed(evt);
            }
        });

        tfAfmPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfAfmPass.setMaximumSize(new java.awt.Dimension(7, 21));
        tfAfmPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfAfmPassMouseClicked(evt);
            }
        });

        tfTaxisPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfTaxisPass.setMaximumSize(new java.awt.Dimension(7, 21));
        tfTaxisPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfTaxisPassMouseClicked(evt);
            }
        });

        tfSimplyPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfSimplyPass.setMaximumSize(new java.awt.Dimension(7, 21));
        tfSimplyPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfSimplyPassMouseClicked(evt);
            }
        });

        tfMyposUser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfMyposUser.setMaximumSize(new java.awt.Dimension(7, 21));
        tfMyposUser.setName(""); // NOI18N
        tfMyposUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfMyposUserMouseClicked(evt);
            }
        });

        tfAfmUser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfAfmUser.setMaximumSize(new java.awt.Dimension(7, 21));
        tfAfmUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfAfmUserMouseClicked(evt);
            }
        });

        tfSimplyUser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfSimplyUser.setMaximumSize(new java.awt.Dimension(7, 21));
        tfSimplyUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfSimplyUserMouseClicked(evt);
            }
        });

        btnAfm1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAfm1.setText("Ανεύρεση ΑΦΜ 1");
        btnAfm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfm1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Ανεύρεση ΑΦΜ");
        jLabel2.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("myPOS");
        jLabel3.setToolTipText("");

        btnMydata.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMydata.setText("myDATA");
        btnMydata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMydataActionPerformed(evt);
            }
        });

        tfTaxisUser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfTaxisUser.setMaximumSize(new java.awt.Dimension(7, 21));
        tfTaxisUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfTaxisUserMouseClicked(evt);
            }
        });

        btnTameiakes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTameiakes.setText("Ταμειακές");
        btnTameiakes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTameiakesActionPerformed(evt);
            }
        });

        btnEsend.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEsend.setText("eSend");
        btnEsend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEsendActionPerformed(evt);
            }
        });

        btnD11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnD11.setText("Δ11");
        btnD11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnD11ActionPerformed(evt);
            }
        });

        btnSimplyRegister.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSimplyRegister.setText("Εγγραφή Simply POS");
        btnSimplyRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimplyRegisterActionPerformed(evt);
            }
        });

        btnSimplyCashRegister.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSimplyCashRegister.setText("Εγγραφή Simply Cash");
        btnSimplyCashRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSimplyCashRegisterMouseClicked(evt);
            }
        });
        btnSimplyCashRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimplyCashRegisterActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("9POS / Simply Rest");
        jLabel6.setToolTipText("");

        tfOrderUser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfOrderUser.setMaximumSize(new java.awt.Dimension(7, 21));
        tfOrderUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfOrderUserMouseClicked(evt);
            }
        });

        tfOrderPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfOrderPass.setMaximumSize(new java.awt.Dimension(7, 21));
        tfOrderPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfOrderPassMouseClicked(evt);
            }
        });

        btn9Pos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn9Pos.setText("9POS");
        btn9Pos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9PosActionPerformed(evt);
            }
        });

        btn9PosRegister.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn9PosRegister.setText("Εγγραφή 9POS");
        btn9PosRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9PosRegisterActionPerformed(evt);
            }
        });

        btnSimplyRest.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSimplyRest.setText("Simply Rest");
        btnSimplyRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimplyRestActionPerformed(evt);
            }
        });

        btnSimplyRestRegister.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSimplyRestRegister.setText("Εγγραφή Simply Rest");
        btnSimplyRestRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSimplyRestRegisterMouseClicked(evt);
            }
        });
        btnSimplyRestRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimplyRestRegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(tfTaxisPass, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfTaxisUser, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnTaxisnet, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnEXous, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnMydata, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEsend, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfAfmUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfAfmPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAfm2, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                                    .addComponent(btnAfm1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(tfMyposUser, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnMypos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnMyposRefister, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                            .addComponent(tfMyposPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addComponent(btnTameiakes, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnD11, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfSimplyPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSimplyPos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSimplyCashRegister, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSimplyCash, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSimplyRegister, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfSimplyUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(tfOrderPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn9Pos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSimplyRestRegister, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSimplyRest, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn9PosRegister, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfOrderUser, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfMyposUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfTaxisUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfAfmUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tfAfmPass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                            .addComponent(tfMyposPass, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                            .addComponent(tfTaxisPass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tfSimplyUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(tfSimplyPass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfOrderPass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnTaxisnet)
                                    .addComponent(btnAfm1)
                                    .addComponent(btnMypos)
                                    .addComponent(btnSimplyPos)
                                    .addComponent(btn9Pos))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnEXous)
                                    .addComponent(btnAfm2)
                                    .addComponent(btnMyposRefister)
                                    .addComponent(btnSimplyRegister)
                                    .addComponent(btn9PosRegister))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnMydata)
                                    .addComponent(btnTameiakes)
                                    .addComponent(btnSimplyCash)
                                    .addComponent(btnSimplyRest))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnSimplyCashRegister)
                                .addComponent(btnSimplyRestRegister))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnD11)
                                .addComponent(btnEsend))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfOrderUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 27, Short.MAX_VALUE))
        );

        tfSimplyUser.getAccessibleContext().setAccessibleDescription("");

        buttonGroup1.add(rbChrome);
        rbChrome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbChrome.setText("Chrome");

        buttonGroup1.add(rbBrave);
        rbBrave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbBrave.setSelected(true);
        rbBrave.setText("Brave");
        rbBrave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBraveActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbFirefox);
        rbFirefox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbFirefox.setText("Firefox");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbChrome)
                    .addComponent(rbBrave)
                    .addComponent(rbFirefox))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbBrave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbChrome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbFirefox)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfServer, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnSync, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 438, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1195, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSync, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnSearch.doClick(1);

        }
    }//GEN-LAST:event_tfSearchKeyPressed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (tbSearch.isEditing()) {
            // Ακυρώνει την επεξεργασία και επιτρέπει την επιλογή άλλης γραμμής
            tbSearch.getCellEditor().cancelCellEditing();
        }
        clean();
        DefaultTableModel model = (DefaultTableModel) tbSearch.getModel();
        model.setRowCount(0);
        //model = (DefaultTableModel) tbSearch_kat_p.getModel();
        findItem();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSyncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSyncActionPerformed
        try {
            // Establish the connection.
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            host = tfServer.getText();
            connectionUrl = "jdbc:sqlserver://" + host + ";"
                    + "databaseName=Pelates;user=sa;password=admin";
            con = DriverManager.getConnection(connectionUrl);

            // Create and execute an SQL statement that returns some data.
            //String SQL = "select kwd,company,afm,business,tel_1,tel_2,mobile,address_1,city_1,email from customer;";
            String SQL = "MERGE INTO Pelates.dbo.customer AS target\n"
                    + "USING (\n"
                    + "    SELECT \n"
                    + "        Kwd, \n"
                    + "        Company, \n"
                    + "        Afm, \n"
                    + "        Business, \n"
                    + "        COALESCE(Tel_1, '') AS Tel_1, \n"
                    + "        COALESCE(Tel_2, '') AS Tel_2, \n"
                    + "        COALESCE(Mobile, '') AS Mobile, \n"
                    + "        COALESCE(Address_1, '') AS Address_1, \n"
                    + "        COALESCE(City_1, '') AS City_1, \n"
                    + "        COALESCE(Email, '') AS Email\n"
                    + "    FROM Megasoft.dbo.E2_Emp065_24\n"
                    + "    INNER JOIN Megasoft.dbo.E2_Emp001_24 ON Megasoft.dbo.E2_Emp001_24.pelid = Megasoft.dbo.E2_Emp065_24.pelid\n"
                    + ") AS source\n"
                    + "ON (target.Kwd = source.Kwd)\n"
                    + "WHEN MATCHED THEN\n"
                    + "    UPDATE SET\n"
                    + "        target.Company = source.Company,\n"
                    + "        target.afm = source.Afm,\n"
                    + "        target.business = source.Business,\n"
                    + "        target.tel_1 = source.Tel_1,\n"
                    + "        target.tel_2 = source.Tel_2,\n"
                    + "        target.mobile = source.Mobile,\n"
                    + "        target.address_1 = source.Address_1,\n"
                    + "        target.city_1 = source.City_1,\n"
                    + "        target.email = source.Email\n"
                    + "WHEN NOT MATCHED THEN\n"
                    + "    INSERT (Kwd, Company, afm, business, tel_1, tel_2, mobile, address_1, city_1, email)\n"
                    + "    VALUES (source.Kwd, source.Company, source.Afm, source.Business, source.Tel_1, source.Tel_2, source.Mobile, source.Address_1, source.City_1, source.Email);";
            System.out.println(SQL);
            stmt = con.createStatement();
            stmt.execute(SQL);
        } // Handle any errors that may have occurred.
        catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException e) {
                }
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException e) {
                }
            }
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                }
            }
        }
    }//GEN-LAST:event_btnSyncActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbSearch.getModel();
        model.setRowCount(0);

        try {
            // Establish the connection.
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            host = tfServer.getText();
            connectionUrl = "jdbc:sqlserver://" + host + ";"
                    + "databaseName=Pelates;user=sa;password=admin";
            con = DriverManager.getConnection(connectionUrl);

            // Create and execute an SQL statement that returns some data.
            //String SQL = "select kwd,company,afm,business,tel_1,tel_2,mobile,address_1,city_1,email from customer;";
            String SQL = "select * from customer order by kwd DESC";
            stmt = con.createStatement();
            rs = stmt.executeQuery(SQL);
            while (rs.next()) {
                Object[] row = {
                    rs.getString("kwd"),
                    rs.getString("company"),
                    rs.getString("afm"),
                    rs.getString("business"),
                    rs.getString("tel_1"),
                    rs.getString("tel_2"),
                    rs.getString("mobile"),
                    rs.getString("address_1"),
                    rs.getString("city_1"),
                    rs.getString("email")
                };

                model.addRow(row);
            }
        } // Handle any errors that may have occurred.
        catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException e) {
                }
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException e) {
                }
            }
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                }
            }
        }
        tbSearch.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    }//GEN-LAST:event_btnLoadActionPerformed

    private void tbSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSearchMouseClicked
        // TODO add your handling code here:
        clean();
        Statement st;
        DefaultTableModel model = (DefaultTableModel) tbSearch.getModel();
        int selectedRowIndex = tbSearch.getSelectedRow();
        kwd = model.getValueAt(selectedRowIndex, 0).toString();
        eponimia = model.getValueAt(selectedRowIndex, 1).toString() + "";
        afm = model.getValueAt(selectedRowIndex, 2).toString() + "";
        email = model.getValueAt(selectedRowIndex, 9).toString() + "";
        kinito = model.getValueAt(selectedRowIndex, 6).toString() + "";
        System.out.println(kwd);
        try {
            // Establish the connection.
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            host = tfServer.getText();
            connectionUrl = "jdbc:sqlserver://" + host + ";"
                    + "databaseName=Pelates;user=sa;password=admin";
            con = DriverManager.getConnection(connectionUrl);
            st = con.createStatement();
            String query = "select * from customer where kwd = '" + kwd + "'";
            System.out.println(query);
            rs = st.executeQuery(query);
            while (rs.next()) {
                tfTaxisUser.setText(rs.getString("taxisuser").trim());
                tfTaxisPass.setText(rs.getString("taxispass").trim());
                tfAfmUser.setText(rs.getString("afmuser").trim());
                tfAfmPass.setText(rs.getString("afmpass").trim());
                tfMyposUser.setText(rs.getString("myposuser").trim());
                tfMyposPass.setText(rs.getString("mypospass").trim());
                tfSimplyUser.setText(rs.getString("simplyuser").trim());
                tfSimplyPass.setText(rs.getString("simplypass").trim());
                tfOrderUser.setText(rs.getString("orderuser").trim());
                tfOrderPass.setText(rs.getString("orderpass").trim());
            }
            tbSearch.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbSearchMouseClicked

    private void tfTaxisUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfTaxisUserMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            System.out.println("Double Click");
            //handle double click event.

            StringSelection stringSelection = new StringSelection(tfTaxisUser.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfTaxisUserMouseClicked

    private void btnMydataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMydataActionPerformed
        // TODO add your handling code here:
        String username = tfTaxisUser.getText();
        String password = tfTaxisPass.getText();
        String url = "https://www1.aade.gr/saadeapps2/bookkeeper-web/bookkeeper/#!/";

        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }

        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.id("username"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.sendKeys(password);
    }//GEN-LAST:event_btnMydataActionPerformed

    private void btnAfm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfm1ActionPerformed
        // TODO add your handling code here:
        //String url = "https://www.aade.gr/anazitisi-basikon-stoiheion-mitrooy-epiheiriseon";
        String url = "https://www1.aade.gr/webtax/wspublicreg/faces/pages/wspublicreg/menu.xhtml";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }

        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);
        String username = tfTaxisUser.getText();
        String password = tfTaxisPass.getText();
        WebElement usernameField = driver.findElement(By.id("username"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.sendKeys(password);
    }//GEN-LAST:event_btnAfm1ActionPerformed

    private void tfSimplyUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfSimplyUserMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            StringSelection stringSelection = new StringSelection(tfSimplyUser.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfSimplyUserMouseClicked

    private void tfAfmUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfAfmUserMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            StringSelection stringSelection = new StringSelection(tfAfmUser.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfAfmUserMouseClicked

    private void tfMyposUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfMyposUserMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            StringSelection stringSelection = new StringSelection(tfMyposUser.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfMyposUserMouseClicked

    private void tfSimplyPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfSimplyPassMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            StringSelection stringSelection = new StringSelection(tfSimplyPass.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfSimplyPassMouseClicked

    private void tfTaxisPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfTaxisPassMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            StringSelection stringSelection = new StringSelection(tfTaxisPass.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfTaxisPassMouseClicked

    private void tfAfmPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfAfmPassMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            StringSelection stringSelection = new StringSelection(tfAfmPass.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfAfmPassMouseClicked

    private void btnSimplyCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimplyCashActionPerformed
        // TODO add your handling code here:
        String username = tfSimplyUser.getText();
        String password = tfSimplyPass.getText();
        String url = "https://app.simplycloud.gr/";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }

        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.id("keyboard"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("Password"));
        passwordField.sendKeys(password);
        WebElement btnSubmit = driver.findElement(By.id("btnSubmit"));
        btnSubmit.click();
        // Κλείσιμο του παραθύρου περιήγησης
        //driver.quit();

    }//GEN-LAST:event_btnSimplyCashActionPerformed

    private void btnEXousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEXousActionPerformed
        // TODO add your handling code here:
        String username = tfTaxisUser.getText();
        String password = tfTaxisPass.getText();
        String url = "https://www1.gsis.gr/taxisnet/mytaxisnet/protected/authorizations.htm";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.id("username"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.sendKeys(password);

        // Κλείσιμο του παραθύρου περιήγησης
        //driver.quit();
    }//GEN-LAST:event_btnEXousActionPerformed

    private void tfMyposPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfMyposPassMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            StringSelection stringSelection = new StringSelection(tfMyposPass.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfMyposPassMouseClicked

    private void btnMyposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyposActionPerformed
        String username = tfMyposUser.getText();
        String password = tfMyposPass.getText();
        String url = "https://www.mypos.com/el/login";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }

        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.id("email"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.sendKeys(password);
        // Κλείσιμο του παραθύρου περιήγησης
        //driver.quit();
    }//GEN-LAST:event_btnMyposActionPerformed

    private void btnMyposRefisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyposRefisterActionPerformed
        // TODO add your handling code here:

        String url = "https://www.mypos.com/el/enroll?ref=1006179#/";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);
    }//GEN-LAST:event_btnMyposRefisterActionPerformed

    private void btnMyposRefisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMyposRefisterMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMyposRefisterMouseClicked

    private void btnAfm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfm2ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        //String url = "https://www.aade.gr/anazitisi-basikon-stoiheion-mitrooy-epiheiriseon";
        String url = "https://www1.aade.gr/sgsisapps/tokenservices/protected/displayConsole.htm";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);
        String username = tfTaxisUser.getText();
        String password = tfTaxisPass.getText();
        WebElement usernameField = driver.findElement(By.id("username"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.sendKeys(password);
    }//GEN-LAST:event_btnAfm2ActionPerformed

    private void btnSimplyPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimplyPosActionPerformed
        // TODO add your handling code here:
        String username = tfSimplyUser.getText();
        String password = tfSimplyPass.getText();
        String url = "https://app.simplypos.com/Account/Login";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.id("keyboard"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("Password"));
        passwordField.sendKeys(password);
        WebElement btnSubmit = driver.findElement(By.id("btnSubmit"));
        btnSubmit.click();
        // Κλείσιμο του παραθύρου περιήγησης
        //driver.quit();
    }//GEN-LAST:event_btnSimplyPosActionPerformed

    private void btnTaxisnetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaxisnetActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String username = tfTaxisUser.getText();
        String password = tfTaxisPass.getText();
        String url = "https://www1.aade.gr/saadeapps3/comregistry/#!/arxiki";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }

        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.id("username"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.sendKeys(password);

        // Κλείσιμο του παραθύρου περιήγησης
        //driver.quit();
    }//GEN-LAST:event_btnTaxisnetActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        // Ανάκτηση των τιμών από τα textfields και έλεγχος αν είναι κενά
        String taxisUser = tfTaxisUser.getText().isEmpty() ? null : tfTaxisUser.getText();
        String taxisPass = tfTaxisPass.getText().isEmpty() ? null : tfTaxisPass.getText();
        String afmUser = tfAfmUser.getText().isEmpty() ? null : tfAfmUser.getText();
        String afmPass = tfAfmPass.getText().isEmpty() ? null : tfAfmPass.getText();
        String myposUser = tfMyposUser.getText().isEmpty() ? null : tfMyposUser.getText();
        String myposPass = tfMyposPass.getText().isEmpty() ? null : tfMyposPass.getText();
        String simplyUser = tfSimplyUser.getText().isEmpty() ? null : tfSimplyUser.getText();
        String simplyPass = tfSimplyPass.getText().isEmpty() ? null : tfSimplyPass.getText();
        String orderUser = tfOrderUser.getText().isEmpty() ? null : tfOrderUser.getText();
        String orderPass = tfOrderPass.getText().isEmpty() ? null : tfOrderPass.getText();

        try {
            // Δημιουργία του SQL ερωτήματος με χρήση PreparedStatement
            String query = "UPDATE customer SET taxisuser=?, taxispass=?, afmuser=?, afmpass=?, "
                         + "myposuser=?, mypospass=?, simplyuser=?, simplypass=?, ORDERUSER=?, ORDERPASS=? "
                         + "WHERE kwd=?";
            PreparedStatement pstmt = con.prepareStatement(query);

            // Ορισμός των τιμών για κάθε πεδίο στο PreparedStatement
            pstmt.setString(1, taxisUser);
            pstmt.setString(2, taxisPass);
            pstmt.setString(3, afmUser);
            pstmt.setString(4, afmPass);
            pstmt.setString(5, myposUser);
            pstmt.setString(6, myposPass);
            pstmt.setString(7, simplyUser);
            pstmt.setString(8, simplyPass);
            pstmt.setString(9, orderUser);
            pstmt.setString(10, orderPass);
            pstmt.setString(11, kwd);

            // Εκτέλεση του SQL ερωτήματος για την ενημέρωση
            pstmt.executeUpdate();

            JOptionPane.showMessageDialog(null, "Επιτυχής ενημέρωση της βάσης δεδομένων.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Σφάλμα κατά την ενημέρωση της βάσης δεδομένων: " + ex.getMessage());
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnTameiakesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTameiakesActionPerformed
        // TODO add your handling code here:
        String username = tfTaxisUser.getText();
        String password = tfTaxisPass.getText();
        String url = "https://www1.aade.gr/taxisnet/info/protected/displayTillInfo.htm";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }

        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.id("username"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.sendKeys(password);

    }//GEN-LAST:event_btnTameiakesActionPerformed

    private void btnEsendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEsendActionPerformed
        // TODO add your handling code here:
        String username = tfTaxisUser.getText();
        String password = tfTaxisPass.getText();
        String url = "https://www1.gsis.gr/tameiakes/myweb/esendN.php?FUNCTION=1";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }

        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.id("idEMAIL"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.name("PASSWD"));
        passwordField.sendKeys(password);
    }//GEN-LAST:event_btnEsendActionPerformed

    private void btnD11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnD11ActionPerformed
        // TODO add your handling code here:
        String username = "jimmy1";
        String password = "8*8*8*";
        String url = "https://www1.aade.gr/taxisnet/kvs/protected/displayLiabilitiesForYear.htm?declarationType=kvsD11";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.id("username"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.sendKeys(password);
    }//GEN-LAST:event_btnD11ActionPerformed

    private void rbBraveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBraveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbBraveActionPerformed

    private void btnSimplyRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimplyRegisterActionPerformed
        // TODO add your handling code here:

        String url = "https://app.simplypos.com/Partners/NewTrial";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.name("UserName"));
        usernameField.sendKeys("et@dgou.gr");
        WebElement passwordField = driver.findElement(By.id("Password"));
        passwordField.sendKeys("!abcd1234");
    }//GEN-LAST:event_btnSimplyRegisterActionPerformed

    private void btnSimplyCashRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimplyCashRegisterActionPerformed
        // TODO add your handling code here:
        String url = "https://app.simplycloud.gr/Partners";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.name("Email"));
        usernameField.sendKeys("et@dgou.gr");
        WebElement passwordField = driver.findElement(By.id("Password"));
        passwordField.sendKeys("054909468");

    }//GEN-LAST:event_btnSimplyCashRegisterActionPerformed

    private void btnSimplyCashRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSimplyCashRegisterMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            System.out.println("Right button clicked");
            jTextArea1.setText("");
            jTextArea1.append("Νέος Πελάτης Simply Cash");
            jTextArea1.append("\nΕπωνυμία: " + eponimia);
            jTextArea1.append("\nΑΦΜ: " + afm);
            jTextArea1.append("\nEmail: " + email);
            jTextArea1.append("\nΚινητό: " + kinito);
            jTextArea1.append("\nΈχει κάνει αποδοχή σύμβασης και εξουσιοδότηση\n");

            StringSelection stringSelection = new StringSelection(jTextArea1.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_btnSimplyCashRegisterMouseClicked

    private void tfOrderUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfOrderUserMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            StringSelection stringSelection = new StringSelection(tfOrderUser.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfOrderUserMouseClicked

    private void tfOrderPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfOrderPassMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            StringSelection stringSelection = new StringSelection(tfOrderPass.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_tfOrderPassMouseClicked

    private void btn9PosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9PosActionPerformed
        // TODO add your handling code here:
        String username = tfOrderUser.getText();
        String password = tfOrderPass.getText();
        // TODO add your handling code here:
        String url = "https://www.ninepos.com/admin";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.name("UserName"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.name("Password"));
        passwordField.sendKeys(password);
        WebElement loginButton = driver.findElement(By.cssSelector("button.btn.primary.btn-block.p-x-md"));
        loginButton.click();
    }//GEN-LAST:event_btn9PosActionPerformed

    private void btn9PosRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9PosRegisterActionPerformed
        // TODO add your handling code here: 
        String url = "https://www.ninepos.com/Admin/Account/SignUp";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement passwordField = driver.findElement(By.name("Tin"));
        passwordField.sendKeys(afm);
        WebElement button = driver.findElement(By.cssSelector("button.btn.btn-icon.btn-rounded.btn-info"));
        button.click();
        WebElement TelephoneField = driver.findElement(By.name("Telephone"));
        TelephoneField.sendKeys(kinito);
        WebElement MobileField = driver.findElement(By.name("Mobile"));
        MobileField.sendKeys(kinito);
        WebElement UserNameField = driver.findElement(By.name("UserName"));
        UserNameField.sendKeys(email);
        WebElement PasswordField = driver.findElement(By.name("Password"));
        PasswordField.sendKeys("9Pos123456");
        WebElement RetypePasswordField = driver.findElement(By.name("RetypePassword"));
        RetypePasswordField.sendKeys("9Pos123456");
        WebElement TermsOfUse = driver.findElement(By.name("TermsOfUse"));
        if (!TermsOfUse.isSelected()) {
            // Κάντε κλικ στο checkbox για να το επιλέξετε
            TermsOfUse.click();
        }
    }//GEN-LAST:event_btn9PosRegisterActionPerformed

    private void btnSimplyRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimplyRestActionPerformed
        // TODO add your handling code here:
        String username = tfOrderUser.getText();
        String password = tfOrderPass.getText();
        String url = "https://rest.simplypos.com/";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.name("Email"));
        usernameField.sendKeys(username);
        WebElement passwordField = driver.findElement(By.name("Password"));
        passwordField.sendKeys(password);
        WebElement btnSubmit = driver.findElement(By.id("kt_sign_in_submit"));
        btnSubmit.click();
    }//GEN-LAST:event_btnSimplyRestActionPerformed

    private void btnSimplyRestRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSimplyRestRegisterMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            System.out.println("Right button clicked");
            jTextArea1.setText("");
            jTextArea1.append("Νέος Πελάτης Simply Rest");
            jTextArea1.append("\nΕπωνυμία: " + eponimia);
            jTextArea1.append("\nΑΦΜ: " + afm);
            jTextArea1.append("\nEmail: " + email);
            jTextArea1.append("\nΚινητό: " + kinito);
            jTextArea1.append("\nΈχει κάνει αποδοχή σύμβασης και εξουσιοδότηση\n");

            StringSelection stringSelection = new StringSelection(jTextArea1.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        }
    }//GEN-LAST:event_btnSimplyRestRegisterMouseClicked

    private void btnSimplyRestRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimplyRestRegisterActionPerformed
        // TODO add your handling code here:
        String url = "https://app.simplycloud.gr/Partners";
        // Διαμόρφωση επιλογών για ανώνυμη περιήγηση στον Brave
        WebDriver driver;
        if (rbFirefox.isSelected()) {
            FirefoxOptions options = new FirefoxOptions();
            options.addArguments("-private");
            options.setCapability("moz:firefoxOptions", options);
            driver = new FirefoxDriver(options);
        } else {
            ChromeOptions options = new ChromeOptions();
            if (rbBrave.isSelected()) {
                options.setBinary(brave); // Ορίζει τη διαδρομή του περιηγητή Brave
            }
            options.addArguments("--incognito");
            options.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new ChromeDriver(options);
        }
        // Ανοιγμα της σελίδας που θέλεις
        driver.get(url);

        // Βρες τα πεδία εισαγωγής χρήστη και κωδικού και συμπλήρωσέ τα
        WebElement usernameField = driver.findElement(By.name("Email"));
        usernameField.sendKeys("et@dgou.gr");
        WebElement passwordField = driver.findElement(By.id("Password"));
        passwordField.sendKeys("054909468");
    }//GEN-LAST:event_btnSimplyRestRegisterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainForm().setVisible(true);
            }
        });
    }

    public void findItem() {
        String ValToSearch = tfSearch.getText();
        ValToSearch = ValToSearch.toUpperCase();
        char[] chars = ValToSearch.toCharArray();
        for (int i = 0; i < chars.length; i++) {
            Character repl = ENGLISH_TO_GREEK.get(chars[i]);
            if (repl != null) {
                chars[i] = repl;
            }
        }
        String newValToSearch = new String(chars);
        DefaultTableModel model = (DefaultTableModel) tbSearch.getModel();
        model.setRowCount(0);

        try {
            // Establish the connection.
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            host = tfServer.getText();
            connectionUrl = "jdbc:sqlserver://" + host + ";"
                    + "databaseName=Pelates;user=sa;password=admin";
            con = DriverManager.getConnection(connectionUrl);

            // Create and execute an SQL statement that returns some data.
            //String SQL = "select kwd,company,afm,business,tel_1,tel_2,mobile,address_1,city_1,email from customer;";
            String SQL = "select * from customer "
                    + "where company LIKE '%" + ValToSearch + "%' OR company LIKE '%" + newValToSearch + "%'"
                    + "OR kwd LIKE '%" + ValToSearch + "%' OR kwd LIKE '%" + newValToSearch + "%'"
                    + "OR afm LIKE '%" + ValToSearch + "%' OR afm LIKE '%" + newValToSearch + "%'"
                    + "OR tel_1 LIKE '%" + ValToSearch + "%' OR tel_1 LIKE '%" + newValToSearch + "%'"
                    + "OR tel_2 LIKE '%" + ValToSearch + "%' OR tel_2 LIKE '%" + newValToSearch + "%'"
                    + "OR mobile LIKE '%" + ValToSearch + "%' OR mobile LIKE '%" + newValToSearch + "%'"
                    + "order by kwd DESC";
            stmt = con.createStatement();
            rs = stmt.executeQuery(SQL);
            while (rs.next()) {
                Object[] row = {
                    rs.getString("kwd"),
                    rs.getString("company"),
                    rs.getString("afm"),
                    rs.getString("business"),
                    rs.getString("tel_1"),
                    rs.getString("tel_2"),
                    rs.getString("mobile"),
                    rs.getString("address_1"),
                    rs.getString("city_1"),
                    rs.getString("email")
                };

                model.addRow(row);
            }
        } // Handle any errors that may have occurred.
        catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException e) {
                }
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException e) {
                }
            }
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                }
            }
        }
        tbSearch.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    }

    private static final Map<Character, Character> ENGLISH_TO_GREEK = new HashMap<>();

    static {
        ENGLISH_TO_GREEK.put('\u0041', '\u0391');  // uppercase A
        ENGLISH_TO_GREEK.put('\u0042', '\u0392');  // uppercase B
        ENGLISH_TO_GREEK.put('\u0043', '\u03A8');  // uppercase C
        ENGLISH_TO_GREEK.put('\u0044', '\u0394');  // uppercase D
        ENGLISH_TO_GREEK.put('\u0045', '\u0395');  // uppercase E
        ENGLISH_TO_GREEK.put('\u0046', '\u03A6');  // uppercase F
        ENGLISH_TO_GREEK.put('\u0047', '\u0393');  // uppercase G
        ENGLISH_TO_GREEK.put('\u0048', '\u0397');  // uppercase H
        ENGLISH_TO_GREEK.put('\u0049', '\u0399');  // uppercase I
        ENGLISH_TO_GREEK.put('\u004A', '\u039E');  // uppercase J
        ENGLISH_TO_GREEK.put('\u004B', '\u039A');  // uppercase K
        ENGLISH_TO_GREEK.put('\u004C', '\u039B');  // uppercase L
        ENGLISH_TO_GREEK.put('\u004D', '\u039C');  // uppercase M
        ENGLISH_TO_GREEK.put('\u004E', '\u039D');  // uppercase N
        ENGLISH_TO_GREEK.put('\u004F', '\u039F');  // uppercase O
        ENGLISH_TO_GREEK.put('\u0050', '\u03A0');  // uppercase P
        //ENGLISH_TO_GREEK.put('\u0051', '\u0391');  // uppercase Q
        ENGLISH_TO_GREEK.put('\u0052', '\u03A1');  // uppercase R
        ENGLISH_TO_GREEK.put('\u0053', '\u03A3');  // uppercase S
        ENGLISH_TO_GREEK.put('\u0054', '\u03A4');  // uppercase T
        ENGLISH_TO_GREEK.put('\u0055', '\u0398');  // uppercase U
        ENGLISH_TO_GREEK.put('\u0056', '\u03A9');  // uppercase V
        ENGLISH_TO_GREEK.put('\u0057', '\u03A3');  // uppercase W
        ENGLISH_TO_GREEK.put('\u0058', '\u03A7');  // uppercase X
        ENGLISH_TO_GREEK.put('\u0059', '\u03A5');  // uppercase Y
        ENGLISH_TO_GREEK.put('\u005A', '\u0396');  // uppercase Z

        // ...
    }

    private void clean() {
        tfTaxisUser.setText("");
        tfTaxisPass.setText("");
        tfAfmUser.setText("");
        tfAfmPass.setText("");
        tfMyposUser.setText("");
        tfMyposPass.setText("");
        tfSimplyUser.setText("");
        tfSimplyPass.setText("");
        jTextArea1.setText("");
        tfOrderUser.setText("");
        tfOrderPass.setText("");
        jTextArea1.setText("");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn9Pos;
    private javax.swing.JButton btn9PosRegister;
    private javax.swing.JButton btnAfm1;
    private javax.swing.JButton btnAfm2;
    private javax.swing.JButton btnD11;
    private javax.swing.JButton btnEXous;
    private javax.swing.JButton btnEsend;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnMydata;
    private javax.swing.JButton btnMypos;
    private javax.swing.JButton btnMyposRefister;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSimplyCash;
    private javax.swing.JButton btnSimplyCashRegister;
    private javax.swing.JButton btnSimplyPos;
    private javax.swing.JButton btnSimplyRegister;
    private javax.swing.JButton btnSimplyRest;
    private javax.swing.JButton btnSimplyRestRegister;
    private javax.swing.JButton btnSync;
    private javax.swing.JButton btnTameiakes;
    private javax.swing.JButton btnTaxisnet;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JRadioButton rbBrave;
    private javax.swing.JRadioButton rbChrome;
    private javax.swing.JRadioButton rbFirefox;
    private javax.swing.JTable tbSearch;
    private javax.swing.JTextField tfAfmPass;
    private javax.swing.JTextField tfAfmUser;
    private javax.swing.JTextField tfMyposPass;
    private javax.swing.JTextField tfMyposUser;
    private javax.swing.JTextField tfOrderPass;
    private javax.swing.JTextField tfOrderUser;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JTextField tfServer;
    private javax.swing.JTextField tfSimplyPass;
    private javax.swing.JTextField tfSimplyUser;
    private javax.swing.JTextField tfTaxisPass;
    private javax.swing.JTextField tfTaxisUser;
    // End of variables declaration//GEN-END:variables
}
